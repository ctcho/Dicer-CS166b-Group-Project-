q
sorted.third == @p8
sorted.second == @p8
sorted.second == @p7
sorted.second == @p6
sorted.second == @p5
sorted.second == @p4
sorted.second == @p3
sorted.second == @p2
sorted.first == @p1
c
n
c
s
c
current_user.nil?
@params
c
current_user.nil?
current_user
=======
q
sorted.third == @dm5
sorted.second == @dm4
q
pp PlayerProfile.all;nil
sorted.third == @p8
sorted.third == @p7
sorted.third == @p6
sorted.third == @p5
sorted.third == @p4
sorted.third == @p3
sorted.second == @p2
sorted.second == @p8
sorted.second == @p7
sorted.second == @p6
sorted.second == @p5
sorted.second == @p4
sorted.first == @p1
sorted.first
exit
>>>>>>> master
c
user
q
pp searches.all;nil
pp searchers.all;nil
pp searches;nil
searches
current_user
include SessionsHelper
include SearchPagesHelper
include UsersHelper
exit
profile.user
profile
current_user
c
user_dm_profiles_url(@user, DmProfile.last)
assert_redirected_to user_dm_profiles_url(@user, DmProfile.last)
c
assert_redirected_to user_dm_profiles_path(@user, @dm_profile)
c
assert_redirected_to user_player_profiles_url(@user, PlayerProfile.last)
c
 assert_redirected_to user_player_profiles_url(@user, @player_profile)
c
 assert_redirected_to user_dm_profiles_path(@user, @dm_profile)
c
assert_redirected_to user_dm_profiles_url(@user, DmProfile.last)
c
user_player_profiles_url(@user, @player_profile)
assert_redirected_to user_player_profiles_url(@user, @player_profile)
@player_profile
c
 assert_redirected_to user_player_profiles_url(@user, PlayerProfile.last)
c
assert_redirected_to user_dm_profiles_path(@user, DmProfile.last)
assert_redirected_to user_dm_profiles_url(@user, DmProfile.last)
c
assert_redirected_to user_dm_profiles_url(@user, @dm_profile)
assert_redirected_to user_dm_profiles_path(@user, @dm_profile)
c
assert_redirected_to user_player_profiles_url(@user, PlayerProfile.last)
c
assert_redirected_to user_player_profiles_url(@user, @player_profile)
c
user_dm_profiles_url(@user, DmProfile.last)
c
@player_profile
user_player_profiles_url(@user, @player_profile)
c
user_player_profiles_url(@user, PlayerProfile.last)
c
user_dm_profiles_path(@user, @dm_profile)
c
user_dm_profiles_path(@user, @dm_profile)
c
current_user
profile.user
profile
c
current_user
profile.user
profile
c
current_user
c
profile.user
profile
c
profile.user
profile
q
profile
profile == current_user.player_profile
q
current_user.player_profile
profile.user
q
profile.user
current_user
profile
q
profile.user
within_distance(current_user, profile.user)
viewed_user
current_user
profile
q
profile
recommend_search_results.count
q
c
set.first.class == PlayerProfile
set.first.class
set.first == PlayerProfile
set.first
c
profile.class
c
within_distance(s.user, current_user)
@user
s.user
n
s.user == @user
@user
current_user.age
s.user.age
within_distance(s.user, current_user)
s.user == current_user
s.user
n
s
@similar_profiles.count
n
c
n
c
n
@similar_profiles.fourth.user
@similar_profiles.third.user
@similar_profiles.second.user
@similar_profiles.first.user
@similar_profiles.first
current_user
s.user
s.uer
@similar_profiles.count
n
c
q
current_user
profile.user == current_user
profile.user.age
profile.user
profile.class
viewed_user.class
q
c
recommend_search_results.count
recommend_search_results
profile
viewed_user
quit
@dm4
@dm2
sorted.sixth
sorted.fifth
sorted.fourth
sorted.third == @dm4
@dm1
sorted.third
c
sorted.first
unsorted.first
c
quit
pp User.search(@params);nil
User.search(@params).third == @p3
include SearchPagesHelper; include UsersHelper
User.search(@params).second == @p1
User.search(@params).second == @p2
User.search(@params).second == @p3
User.search(@params).first == @p2
User.search(@params).first == @p3
User.search(@params).second
@p3
c
n
@dm_profile
@user
c
quit
c
quit
c
n
c
quit
n
exit
user2
user1
c
n
user2
user1
n
trace_var user1
trace_var
trace
user2
user1
c
n
s
@player_profile
@user
=======
params
quit
params
q
c
current_user.nil?
@params
c
current_user.nil?
current_user
c
current_user.nil?
current_user == @searcher
current_user
quit
current_user
